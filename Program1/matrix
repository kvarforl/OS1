#!/bin/bash -e

#redirect stdout to stderr
#echo "error message:" 1>&2
#exit 1

#USAGE
# matrix operation m1 m2
# operation = ${1}
# m1file = ${2}
# m2file = ${3}

#validate matrix:
# -- ${2} is valid file ( use test ??)
# -- OR stdin provides input
# -- otherwise error and exit

#STORE MATRIX 1
#ideas for matrix reading:
#mapfile < ${2}; echo "${MAPFILE[@]}"

#check args and store matrices
case "${1}" in
    dims | transpose | mean)
        #check arg count: $# 
        #   --should be 1 (read from stdin) 
        #   --or 2 (read from file ${2}) 
        #   -- anything else, error
        ;;
    add | multiply)
        #check arg count: $#
        #   --should be 3 (read from files ${2} ${3})
        #   --anything else, error
        ;;
    *)
        echo "Error: Invalid Op Arg"
        ;;
esac


#choose case based on operation arg. Error if false
#or, use func eval in hints
case "${1}" in
    dims)
        echo "dims"
        ;;
    transpose)
        echo "transpose"
        ;;
    mean)
        echo "mean"
        ;;
    add)
        echo "add"
        #if $# != 3 -- ERROR + EXIT
        #validateMatrix ( ${3} )
        #storeMatrix ( ${3} )
        ;;    
    multiply)
        echo "multiply"
        #if $# != 3 -- ERROR + EXIT
        #validateMatrix ( ${3} )
        #storeMatrix ( ${3} )
        ;;    
    *)
        echo "ERROR -- operation argument invalid" 
        ;;
esac
