#!/bin/bash -e

#MATH HINTS:
#i = $((9+9))
#((i++))

#USAGE
# matrix operation m1 m2
# operation = ${1}
# m1file = ${2}
# m2file = ${3}

#validate matrix:
# -- ${2} is valid file ( use test ??)
# -- OR stdin provides input
# -- otherwise error and exit

#STORE MATRIX 
#cat <file> | mapfile <arrname>

#ACCESS ELEM IN MATRIX
#ind = (numcols * row) + col
#echo ${<arrname>[@]} | cut -d " " -f $ind

#rowind = $1, colind=$2
function getFromM1()
{
    accessInd=$((m1cols * ${1} + ${2}))
    echo $accessInd
    echo $1
    echo $2
}

function getFromM2()
{
    echo "TODO: get from matrix 2"
}

#check args and store matrices
case "${1}" in
    dims | transpose | mean)
        case "$#" in
            1)
                echo "Read from stdin"
                mapfile -t matrix1 #store matrix in array 
                ;;
            2)
                echo "Read from file"
                mapfile -t matrix1 < ${2} #store matrix in array
                m1rows="$(wc -l ${2} | cut -d " " -f 1)" 
                m1cols=$(($(wc -w ${2} | cut -d " " -f 1) / $m1rows)) #Total Entries / num Rows = numCols
                ;;
            *)
                echo "Error -- Too many Matrix arguments" 1>&2
                exit 1
                ;;
        esac
        ;;
    add | multiply)
        case "$#" in
            3)
                echo "Read from file (good args)"
                ;;
            *) 
                echo "Error -- not enough matrix arguments for operation" 1>&2
                exit 1
                ;;
        esac
        ;;
    *)
        echo "Error -- Invalid Operation Arg" 1>&2
        exit 1
        ;;
esac


#use func eval in hints to call funcs
